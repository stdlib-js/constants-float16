// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=function(){try{return e({},"x",{}),!0}catch(e){return!1}},r=Object.defineProperty,a=Object.prototype,_=a.toString,o=a.__defineGetter__,n=a.__defineSetter__,l=a.__lookupGetter__,E=a.__lookupSetter__;var S=r,i=function(e,t,r){var S,i,u,N;if("object"!=typeof e||null===e||"[object Array]"===_.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===_.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((i="value"in r)&&(l.call(e,t)||E.call(e,t)?(S=e.__proto__,e.__proto__=a,delete e[t],e[t]=r.value,e.__proto__=S):e[t]=r.value),u="get"in r,N="set"in r,i&&(u||N))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return u&&o&&o.call(e,t,r.get),N&&n&&n.call(e,t,r.set),e},u=t()?S:i;var N=function(e,t,r){u(e,t,{configurable:!1,enumerable:!0,writable:!1,value:r})},c=.09921256574801247,s=.0009765625,I=15,p=65504,T=2047,A=-2047,b=Number,f=b.NEGATIVE_INFINITY,P=2,M=b.POSITIVE_INFINITY,y=11,R=6103515625e-14,d=5.960464477539063e-8,v=.03125,O={};N(O,"CBRT_EPS",c),N(O,"EPS",.0009765625),N(O,"EXPONENT_BIAS",15),N(O,"MAX",65504),N(O,"MAX_SAFE_INTEGER",2047),N(O,"MIN_SAFE_INTEGER",-2047),N(O,"NINF",f),N(O,"NUM_BYTES",2),N(O,"PINF",M),N(O,"PRECISION",11),N(O,"SMALLEST_NORMAL",6103515625e-14),N(O,"SMALLEST_SUBNORMAL",d),N(O,"SQRT_EPS",.03125);export{c as CBRT_EPS,s as EPS,I as EXPONENT_BIAS,p as MAX,T as MAX_SAFE_INTEGER,A as MIN_SAFE_INTEGER,f as NINF,P as NUM_BYTES,M as PINF,y as PRECISION,R as SMALLEST_NORMAL,d as SMALLEST_SUBNORMAL,v as SQRT_EPS,O as default};
//# sourceMappingURL=mod.js.map
