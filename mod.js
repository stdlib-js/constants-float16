// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=Object.defineProperty,r=Object.prototype,a=r.toString,_=r.__defineGetter__,o=r.__defineSetter__,n=r.__lookupGetter__,l=r.__lookupSetter__;var E=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,t,E){var S,i,u,N;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof E||null===E||"[object Array]"===a.call(E))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+E+"`.");if((i="value"in E)&&(n.call(e,t)||l.call(e,t)?(S=e.__proto__,e.__proto__=r,delete e[t],e[t]=E.value,e.__proto__=S):e[t]=E.value),u="get"in E,N="set"in E,i&&(u||N))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return u&&_&&_.call(e,t,E.get),N&&o&&o.call(e,t,E.set),e};function S(e,t,r){E(e,t,{configurable:!1,enumerable:!0,writable:!1,value:r})}var i=.09921256574801247,u=.0009765625,N=15,c=65504,s=2047,I=-2047,p=Number,T=p.NEGATIVE_INFINITY,A=2,b=p.POSITIVE_INFINITY,f=11,P=6103515625e-14,M=5.960464477539063e-8,y=.03125,R={};S(R,"CBRT_EPS",.09921256574801247),S(R,"EPS",.0009765625),S(R,"EXPONENT_BIAS",15),S(R,"MAX",65504),S(R,"MAX_SAFE_INTEGER",2047),S(R,"MIN_SAFE_INTEGER",-2047),S(R,"NINF",T),S(R,"NUM_BYTES",2),S(R,"PINF",b),S(R,"PRECISION",11),S(R,"SMALLEST_NORMAL",6103515625e-14),S(R,"SMALLEST_SUBNORMAL",5.960464477539063e-8),S(R,"SQRT_EPS",.03125);export{i as CBRT_EPS,u as EPS,N as EXPONENT_BIAS,c as MAX,s as MAX_SAFE_INTEGER,I as MIN_SAFE_INTEGER,T as NINF,A as NUM_BYTES,b as PINF,f as PRECISION,P as SMALLEST_NORMAL,M as SMALLEST_SUBNORMAL,y as SQRT_EPS,R as default};
//# sourceMappingURL=mod.js.map
